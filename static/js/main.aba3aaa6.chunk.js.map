{"version":3,"sources":["components/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodsList","props","goods","className","map","good","goodsFromServer","App","state","isVisible","isReverse","sortByAlphabet","sortByLength","isReset","visible","setState","reverse","reset","this","visibleGoods","sort","a","b","localeCompare","length","type","onClick","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mQAMaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,oBAAIC,UAAU,iBAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,aAAzB,SACGE,GADMA,SCPXC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2JaC,E,4MA9IbC,MAAQ,CACNN,MAAOI,EACPG,WAAW,EACXC,WAAW,EACXC,gBAAgB,EAChBC,cAAc,EACdC,SAAS,G,EAGXC,QAAU,WACR,EAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBC,WAAYD,EAAMC,e,EAKtBO,QAAU,WACR,EAAKD,UAAS,SAAAP,GAAK,MAAK,CACtBE,WAAYF,EAAME,UAClBG,SAAS,O,EAIbF,eAAiB,WACf,EAAKI,UAAS,SAAAP,GAAK,MAAK,CACtBG,gBAAiBH,EAAMG,eACvBE,SAAS,O,EAIbD,aAAe,WACb,EAAKG,UAAS,SAAAP,GAAK,MAAK,CACtBI,cAAeJ,EAAMI,aACrBC,SAAS,O,EAIbI,MAAQ,WACN,EAAKF,UAAS,SAAAP,GAAK,MAAK,CACtBK,SAAUL,EAAMK,a,4CAIpB,WACE,MAOIK,KAAKV,MANPC,EADF,EACEA,UACAC,EAFF,EAEEA,UACAR,EAHF,EAGEA,MACAS,EAJF,EAIEA,eACAC,EALF,EAKEA,aACAC,EANF,EAMEA,QAGEM,EAAejB,EAkBnB,OAhBIS,IACFQ,EAAe,YAAIA,GAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,OAG9DV,IACFO,EAAe,YAAIA,GAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,WAG3Dd,IACFS,EAAe,YAAIA,GAAcH,WAG/BH,IACFM,EAAY,YAAOjB,IAInB,sBAAKC,UAAU,MAAf,WACIM,GACA,wBACEgB,KAAK,SACLC,QAASR,KAAKJ,QACdX,UAAU,cAHZ,mBASDM,GACC,sBAAKN,UAAU,YAAf,UACE,wBACEsB,KAAK,SACLC,QAASR,KAAKF,QACdb,UAAWwB,IACT,cACA,CACE,qBAAsBjB,IAAcG,IAN1C,qBAaA,wBACEY,KAAK,SACLC,QAASR,KAAKP,eACdR,UAAWwB,IACT,cACA,CACE,qBAAsBhB,IAAmBE,IAN/C,iCAaA,wBACEY,KAAK,SACLC,QAASR,KAAKN,aACdT,UAAWwB,IACT,cACA,CACE,qBAAsBf,IAAiBC,IAN7C,4BAaA,wBACEY,KAAK,SACLC,QAASR,KAAKD,MACdd,UAAU,cAHZ,mBAQA,6BACGM,GAAa,cAAC,EAAD,CAAWP,MAAOiB,gB,GAtI5BS,IAAMC,WCxBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aba3aaa6.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = (props) => {\n  const { goods } = props;\n\n  return (\n    <ul className=\"App__list list\">\n      {goods.map(good => (\n        <li key={good} className=\"list__item\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  isVisible: boolean,\n  isReverse: boolean,\n  sortByAlphabet: boolean,\n  sortByLength: boolean,\n  isReset: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    isVisible: false,\n    isReverse: false,\n    sortByAlphabet: false,\n    sortByLength: false,\n    isReset: false,\n  };\n\n  visible = () => {\n    this.setState(state => ({\n      isVisible: !state.isVisible,\n    }\n    ));\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReverse: !state.isReverse,\n      isReset: false,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState(state => ({\n      sortByAlphabet: !state.sortByAlphabet,\n      isReset: false,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(state => ({\n      sortByLength: !state.sortByLength,\n      isReset: false,\n    }));\n  };\n\n  reset = () => {\n    this.setState(state => ({\n      isReset: !state.isReset,\n    }));\n  };\n\n  render() {\n    const {\n      isVisible,\n      isReverse,\n      goods,\n      sortByAlphabet,\n      sortByLength,\n      isReset,\n    } = this.state;\n\n    let visibleGoods = goods;\n\n    if (sortByAlphabet) {\n      visibleGoods = [...visibleGoods].sort((a, b) => a.localeCompare(b));\n    }\n\n    if (sortByLength) {\n      visibleGoods = [...visibleGoods].sort((a, b) => a.length - b.length);\n    }\n\n    if (isReverse) {\n      visibleGoods = [...visibleGoods].reverse();\n    }\n\n    if (isReset) {\n      visibleGoods = [...goods];\n    }\n\n    return (\n      <div className=\"App\">\n        {!isVisible && (\n          <button\n            type=\"button\"\n            onClick={this.visible}\n            className=\"app__button\"\n          >\n            START\n          </button>\n        )}\n\n        {isVisible && (\n          <div className=\"app__body\">\n            <button\n              type=\"button\"\n              onClick={this.reverse}\n              className={classNames(\n                'app__button',\n                {\n                  'app__button-active': isReverse && !isReset,\n                },\n              )}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortByAlphabet}\n              className={classNames(\n                'app__button',\n                {\n                  'app__button-active': sortByAlphabet && !isReset,\n                },\n              )}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortByLength}\n              className={classNames(\n                'app__button',\n                {\n                  'app__button-active': sortByLength && !isReset,\n                },\n              )}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.reset}\n              className=\"app__button\"\n            >\n              Reset\n            </button>\n\n            <ul>\n              {isVisible && <GoodsList goods={visibleGoods} />}\n            </ul>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}